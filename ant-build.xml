<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-build" default="execute" xmlns:if="ant:if" xmlns:unless="ant:unless">
  <target name="execute">
  </target>

  <target name="buildGo">
    <echo>Building Gitblit GO ${project.version}</echo>

    <property name="go.dir" value="${project.build.directory}/go" />
    <delete dir="${go.dir}" />

    <prepareDataDirectory toDir="${go.dir}/data" />

    <!-- Generate the docs for the GO build -->
    <!-- TODO <generateDocs toDir="${go.dir}/docs" /> -->

    <copy file="${project.build.directory}/gitblit-${project.version}-all.jar" tofile="gitblit.jar" />
    <move file="gitblit.jar" todir="${project.build.directory}/go" />
    <copy todir="${project.build.directory}/go" flatten="true">
      <fileset dir="${project.build.directory}">
        <include name="bcprov-jdk*.jar" />
      </fileset>
    </copy>

    <condition property="isWindows" value="true">
      <os family="windows" />
    </condition>

    <copy file="${basedir}/src/main/distrib/win/gitblit.cmd" todir="${project.build.directory}/go" if:set="isWindows" />
    <copy file="${basedir}/src/main/distrib/linux/gitblit.sh" todir="${project.build.directory}/go" unless:set="isWindows" />

    <echo>Done</echo>
  </target>

  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <!-- ~~~~~ Macro to create a pristine data directory for the target build ~~~~~ -->
  <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
  <macrodef name="prepareDataDirectory">
    <attribute name="toDir" />
    <sequential>
      <mkdir dir="@{toDir}" />
      <copy todir="@{toDir}" overwrite="false">
        <fileset dir="${basedir}/src/main/distrib/data">
          <include name="users.conf" />
          <include name="projects.conf" />
          <include name="defaults.properties" />
          <include name="gitblit.properties" />
        </fileset>
      </copy>
      <mkdir dir="@{toDir}/git" />
      <copy todir="@{toDir}/git" overwrite="false">
        <fileset dir="${basedir}/src/main/distrib/data/git">
          <include name="project.mkd" />
        </fileset>
      </copy>
      <mkdir dir="@{toDir}/groovy" />
      <copy todir="@{toDir}/groovy">
        <fileset dir="${basedir}/src/main/distrib/data/groovy">
          <include name="sendmail.groovy" />
          <include name="sendmail-html.groovy" />
          <include name="jenkins.groovy" />
          <include name="protect-refs.groovy" />
          <include name="blockpush.groovy" />
          <include name="localclone.groovy" />
          <include name="fogbugz.groovy" />
          <include name="thebuggenie.groovy" />
          <include name="fisheye.groovy" />
          <include name="redmine-fetch.groovy" />
          <include name="subgit.groovy" />
        </fileset>
      </copy>
      <mkdir dir="@{toDir}/gitignore" />
      <copy todir="@{toDir}/gitignore">
        <fileset dir="${basedir}/src/main/distrib/data/gitignore">
          <include name="*.gitignore" />
        </fileset>
      </copy>
    </sequential>
  </macrodef>
</project>
